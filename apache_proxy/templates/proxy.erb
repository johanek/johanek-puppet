# This file is managed by puppet

<Proxy balancer://puppetmaster-<%= @name %>>
  BalancerMember http://<%= @hostip %>:8140
</Proxy>
<Proxy balancer://dashboard-<%= @name %>>
  BalancerMember http://<%= @hostip %>:3000
</Proxy>

<VirtualHost *:8140>
        ServerName <%= @name %>
        SSLEngine on
        SSLCipherSuite SSLv2:-LOW:-EXPORT:RC4+RSA
        SSLProtocol -ALL +SSLv3 +TLSv1
        SSLCipherSuite ALL:!ADH:RC4+RSA:+HIGH:+MEDIUM:-LOW:-SSLv2:-EXP
        SSLCertificateFile /var/lib/lxc/<%= @name %>/rootfs/var/lib/puppet/ssl/<%= @name %>/certs/<%= @name %>.pem
        SSLCertificateKeyFile /var/lib/lxc/<%= @name %>/rootfs/var/lib/puppet/ssl/<%= @name %>/private_keys/<%= @name %>.pem
        SSLCertificateChainFile /var/lib/lxc/<%= @name %>/rootfs/var/lib/puppet/ssl/<%= @name %>/certs/ca.pem
        SSLCACertificateFile /var/lib/lxc/<%= @name %>/rootfs/var/lib/puppet/ssl/<%= @name %>/ca/ca_crt.pem
        SSLCARevocationFile /var/lib/lxc/<%= @name %>/rootfs/var/lib/puppet/ssl/<%= @name %>/ca/ca_crl.pem
        SSLVerifyClient optional
        SSLVerifyDepth 1
        SSLOptions +StdEnvVars
 
        RequestHeader set X-SSL-Subject %{SSL_CLIENT_S_DN}e
        RequestHeader set X-Client-DN %{SSL_CLIENT_S_DN}e
        RequestHeader set X-Client-Verify %{SSL_CLIENT_VERIFY}e
 
        <Location />
                SetHandler balancer-manager
                Order allow,deny
                Allow from all
        </Location>

        ProxyPass / balancer://puppetmaster-<%= @name %>/
        ProxyPassReverse / balancer://puppetmaster-<%= @name %>/
        ProxyPreserveHost On
</VirtualHost>

<VirtualHost *:3000>
        ServerName <%= @name %>

        <Location />
                SetHandler balancer-manager
                Order allow,deny
                Allow from all
        </Location>

        ProxyPass / balancer://dashboard-<%= @name %>/
        ProxyPassReverse / balancer://dashboard-<%= @name %>/
        ProxyPreserveHost On
</VirtualHost>

<VirtualHost *:443>
   ServerName <%= @name %>
 
   # activate HTTPS on the reverse proxy
   SSLEngine On
   SSLCertificateFile /var/lib/lxc/<%= @name %>/rootfs/var/lib/puppet/ssl/<%= @name %>/certs/<%= @name %>.pem
   SSLCertificateKeyFile /var/lib/lxc/<%= @name %>/rootfs/var/lib/puppet/ssl/<%= @name %>/private_keys/<%= @name %>.pem
   SSLCertificateChainFile /var/lib/lxc/<%= @name %>/rootfs/var/lib/puppet/ssl/<%= @name %>/certs/ca.pem
   SSLCACertificateFile /var/lib/lxc/<%= @name %>/rootfs/var/lib/puppet/ssl/<%= @name %>/ca/ca_crt.pem
   SSLCARevocationFile /var/lib/lxc/<%= @name %>/rootfs/var/lib/puppet/ssl/<%= @name %>/ca/ca_crl.pem
   
   # activate the client certificate authentication 
   SSLVerifyClient require
   SSLVerifyDepth 2
 
   <Proxy *>
     AddDefaultCharset Off
     Order deny,allow
     Allow from all
   </Proxy>
 
   # initialize the special headers to a blank value to avoid http header forgeries
   RequestHeader set SSL_CLIENT_S_DN    ""
   RequestHeader set SSL_CLIENT_I_DN    ""
   RequestHeader set SSL_SERVER_S_DN_OU ""
   RequestHeader set SSL_CLIENT_VERIFY  ""
 
   <Location />
     # add all the SSL_* you need in the internal web application
     RequestHeader set SSL_CLIENT_S_DN "%{SSL_CLIENT_S_DN}s"
     RequestHeader set SSL_CLIENT_I_DN "%{SSL_CLIENT_I_DN}s"
     RequestHeader set SSL_SERVER_S_DN_OU "%{SSL_SERVER_S_DN_OU}s"
     RequestHeader set SSL_CLIENT_VERIFY "%{SSL_CLIENT_VERIFY}s"
 
     ProxyPass          http://<%= @hostip %>:444/
     ProxyPassReverse   http://<%= @hostip %>:444/
   </Location>
</VirtualHost>
